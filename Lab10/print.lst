


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: Zarif Hossain and Ayush 
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 PRESERVE8
   18 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   19 00000000                 THUMB
   20 00000000         
   21 00000000         
   22 00000000         
   23 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   24 00000000         ; Output a 32-bit number in unsigned decimal format
   25 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   26 00000000         ; Output: none
   27 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   28 00000000         ; R0=0,    then output "0"
   29 00000000         ; R0=3,    then output "3"
   30 00000000         ; R0=89,   then output "89"
   31 00000000         ; R0=123,  then output "123"
   32 00000000         ; R0=9999, then output "9999"
   33 00000000         ; R0=4294967295, then output "4294967295"
   34 00000000         LCD_OutDec
   35 00000000         
   36 00000000         ;*********binding phase********
   37 00000000         
   38 00000000 00000004 
                       variable1
                               EQU              4
   39 00000000         
   40 00000000         ;initilize stack
   41 00000000 B081            SUB              SP, SP, #4
   42 00000002 F04F 020A       MOV              R2, #10
   43 00000006 9201            STR              R2, [SP,#variable1]
   44 00000008         
   45 00000008         
   46 00000008         ;textbook page 281?
   47 00000008         
   48 00000008 B510            PUSH             {R4, LR}
   49 0000000A 9A01            LDR              R2, [SP, #variable1] ; divisor
   50 0000000C F04F 0400       MOV              R4, #0      ; count = r4
   51 00000010         



ARM Macro Assembler    Page 2 


   52 00000010         loopback
   53 00000010 FBB0 F3F2       UDIV             R3, R0, R2  ; R3 = N/10
   54 00000014 FB03 F102       MUL              R1, R3, R2  ; R1= N/10 *10
   55 00000018 EBA0 0101       SUB              R1, R0, R1  ; R1 = REMAINDER
   56 0000001C B402            PUSH             {R1}        ; Push digit for nu
                                                            mber
   57 0000001E F104 0401       ADD              R4, R4, #1  ; count +1
   58 00000022 4618            MOV              R0, R3      ; r0 = n/20
   59 00000024 2800            CMP              R0, #0      ;
   60 00000026 D1F3            BNE              loopback
   61 00000028 BC01    again   POP              {R0}        ;restore into r0
   62 0000002A F100 0030       ADD              R0, R0, #0x30 ; ASC CODE CHART
   63 0000002E B510            PUSH             {LR, R4}
   64 00000030 F7FF FFFE       BL               ST7735_OutChar
   65 00000034 E8BD 4010       POP              {LR, R4}
   66 00000038 3C01            SUBS             R4, #1      ; COUNT - 1
   67 0000003A 2C00            CMP              R4, #0      ;
   68 0000003C D1F4            BNE              again
   69 0000003E         
   70 0000003E E8BD 4010       POP              {R4, LR}
   71 00000042         
   72 00000042 B001            ADD              SP, SP, #4  ;
   73 00000044 4770            BX               LR
   74 00000046         
   75 00000046         
   76 00000046         
   77 00000046         
   78 00000046         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   79 00000046         
   80 00000046         ; -----------------------LCD _OutFix--------------------
                       --
   81 00000046         ; Output characters to LCD display in fixed-point format
                       
   82 00000046         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   83 00000046         ; Inputs:  R0 is an unsigned 32-bit number
   84 00000046         ; Outputs: none
   85 00000046         ; E.g., R0=0,    then output "0.000"
   86 00000046         ;       R0=3,    then output "0.003"
   87 00000046         ;       R0=89,   then output "0.089"
   88 00000046         ;       R0=123,  then output "0.123"
   89 00000046         ;       R0=9999, then output "9.999"
   90 00000046         ;       R0>9999, then output "*.***"
   91 00000046         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   92 00000046         LCD_OutFix
   93 00000046         
   94 00000046         ;******BINDING*****
   95 00000046 00000004 
                       variable2
                               EQU              4
   96 00000046         
   97 00000046         
   98 00000046         
   99 00000046         ;******ALLOCATION***
  100 00000046 B081            SUB              SP, SP, #4  ;
  101 00000048 F44F 727A       MOV              R2, #1000   ; 
  102 0000004C 9201            STR              R2, [SP, #variable2] ; stores 1
                                                            000 into variable 2



ARM Macro Assembler    Page 3 


                                                            
  103 0000004E         
  104 0000004E         
  105 0000004E         
  106 0000004E         
  107 0000004E         
  108 0000004E         
  109 0000004E         
  110 0000004E         ;check id r0 is > 9999   INPUT IS IN R0
  111 0000004E         
  112 0000004E F242 720F       MOV              R2, #9999   ;
  113 00000052 4290            CMP              R0, R2      ;
  114 00000054 D83F            BHI              outputsymbols ;if r0 is greater
                                                             than 9999, go to o
                                                            utputting star symb
                                                            ols
  115 00000056         
  116 00000056         
  117 00000056         ;check input and output in fixed-point format
  118 00000056         
  119 00000056         ;fixed constant is .001
  120 00000056         ;left of the decimal point (i/1000);
  121 00000056         ;decimal point (.)
  122 00000056         ;tenths digit (0x30 + (i%1000) /100 );
  123 00000056         ;hundreths digit (0x30 + (i%100) /10)
  124 00000056         ;thousands digit (0x30 +i%10) ;
  125 00000056         
  126 00000056         ;LEFT OF THE DECIMAL POINT 
  127 00000056         ;left of the decimal point (i/1000);
  128 00000056         
  129 00000056         
  130 00000056         ;USE R3 FOR DIVISON 
  131 00000056         ;R1 FOR REMAINDER 
  132 00000056         ;R0 = INPUT 
  133 00000056         ;R2 = MUL
  134 00000056         
  135 00000056 9A01            LDR              R2, [SP, #variable2] 
                                                            ; r2 = 1000
  136 00000058 FBB0 F3F2       UDIV             R3, R0, R2  ; R3 = R0/1000
  137 0000005C 9301            STR              R3, [SP, #variable2]
  138 0000005E FB03 F202       MUL              R2, R3, R2  ; R2 = R0/1000 *100
                                                            0
  139 00000062 EBA0 0102       SUB              R1, R0, R2  ; finds remainder 
  140 00000066 9801            LDR              R0, [SP, #variable2]
  141 00000068 F100 0030       ADD              R0, R0, #0x30 ; asc code
  142 0000006C B502            PUSH             {LR, R1}
  143 0000006E F7FF FFFE       BL               ST7735_OutChar ; PRINTS left de
                                                            cimal point number
  144 00000072         
  145 00000072         ;print out decimal point
  146 00000072 F04F 002E       MOV              R0, #0x2E
  147 00000076 F7FF FFFE       BL               ST7735_OutChar ;prints . to the
                                                             screen
  148 0000007A         
  149 0000007A E8BD 4002       POP              { LR, R1}   ; R1 HAS THE REMAIN
                                                            ING DIGITS
  150 0000007E         
  151 0000007E         ;TENTHS DIGIT
  152 0000007E         ;tenths digit (0x30 + (i%1000) /100 );



ARM Macro Assembler    Page 4 


  153 0000007E         
  154 0000007E         
  155 0000007E F04F 0264       MOV              R2, #100    ; 
  156 00000082 FBB1 F3F2       UDIV             R3, R1, R2  ; R3 = R1/100    I%
                                                            100 / 100
  157 00000086 9301            STR              R3, [SP, #variable2]
  158 00000088 FB03 F202       MUL              R2, R3, R2  ; R2 = r1/100 * 100
                                                            
  159 0000008C EBA1 0102       SUB              R1, R1, R2  ; FIND REMAINDER
  160 00000090 9801            LDR              R0, [SP, #variable2]
  161 00000092 F100 0030       ADD              R0, R0, #0x30
  162 00000096         
  163 00000096 B502            PUSH             {LR, R1}
  164 00000098 F7FF FFFE       BL               ST7735_OutChar ; PRINTS OUT TEN
                                                            TH DIGIT
  165 0000009C E8BD 4002       POP              {LR ,R1}    ; R1 HAS REMAINING 
                                                            NUMBER
  166 000000A0         
  167 000000A0         ;HUNDRETHS DIGIT
  168 000000A0         ;hundreths digit (0x30 + (i%100) /10)
  169 000000A0         
  170 000000A0 F04F 020A       MOV              R2, #10     ;
  171 000000A4 FBB1 F3F2       UDIV             R3, R1, R2  ; R3 = R1/10
  172 000000A8 9301            STR              R3, [SP, #variable2] ;
  173 000000AA FB03 F202       MUL              R2, R3, R2  ; R2 = r1/10 * 10
  174 000000AE EBA1 0102       SUB              R1, R1, R2  ; FIND REMAINDER
  175 000000B2 9801            LDR              R0, [SP, #variable2] ;
  176 000000B4 F100 0030       ADD              R0, R0, #0x30 ; ASC CODE
  177 000000B8         
  178 000000B8 B502            PUSH             {LR, R1}
  179 000000BA F7FF FFFE       BL               ST7735_OutChar
  180 000000BE E8BD 4002       POP              {LR, R1}    ; R1 HAS REMAINING 
                                                            NUMBER
  181 000000C2 9101            STR              R1, [SP, #variable2]
  182 000000C4         
  183 000000C4         
  184 000000C4         
  185 000000C4         ;THOUSANDS DIGIT
  186 000000C4         ;thousands digit (0x30 +i%10) ;
  187 000000C4         
  188 000000C4 9801            LDR              R0, [SP, #variable2] ; remainde
                                                            r value in r0
  189 000000C6 F100 0030       ADD              R0, R0, #0x30 ;
  190 000000CA B502            PUSH             {LR, R1}
  191 000000CC F7FF FFFE       BL               ST7735_OutChar
  192 000000D0         
  193 000000D0         
  194 000000D0 E8BD 4002       POP              {LR, R1}    ; R1 HAS REMAINING 
                                                            NUMBER
  195 000000D4         
  196 000000D4 E017            B                finish
  197 000000D6         
  198 000000D6         
  199 000000D6         
  200 000000D6         
  201 000000D6         
  202 000000D6         
  203 000000D6         
  204 000000D6         outputsymbols



ARM Macro Assembler    Page 5 


  205 000000D6         ;ASC CHART: * = 0X2A    . = 0X2E
  206 000000D6         
  207 000000D6 B502            PUSH             {LR, R1}
  208 000000D8         
  209 000000D8 F04F 002A       MOV              R0, #0x2A   ;
  210 000000DC F7FF FFFE       BL               ST7735_OutChar ; outputs single
                                                             character * to scr
                                                            een
  211 000000E0 F04F 002E       MOV              R0, #0x2E   ; . ASC CODE
  212 000000E4 F7FF FFFE       BL               ST7735_OutChar ; ouputs . to sc
                                                            reen
  213 000000E8 F04F 002A       MOV              R0, #0x2A   ;
  214 000000EC F7FF FFFE       BL               ST7735_OutChar ; outputs single
                                                             character * to scr
                                                            een
  215 000000F0 F04F 002A       MOV              R0, #0x2A   ;
  216 000000F4 F7FF FFFE       BL               ST7735_OutChar ; outputs single
                                                             character * to scr
                                                            een
  217 000000F8 F04F 002A       MOV              R0, #0x2A   ;
  218 000000FC F7FF FFFE       BL               ST7735_OutChar ; outputs single
                                                             character * to scr
                                                            een
  219 00000100         
  220 00000100 E8BD 4002       POP              {LR, R1}
  221 00000104         
  222 00000104         
  223 00000104 4770            BX               LR
  224 00000106         ; should display *.*** 
  225 00000106         
  226 00000106         
  227 00000106         
  228 00000106         
  229 00000106         
  230 00000106         
  231 00000106         finish
  232 00000106 B001            ADD              SP, SP, #4  ;
  233 00000108         
  234 00000108 4770            BX               LR
  235 0000010A         
  236 0000010A         
  237 0000010A 00 00           ALIGN
  238 0000010C         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  239 0000010C         
  240 0000010C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  241 0000010C                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_SpaceInvaders -IC:\Users\miahm\AppD
ata\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\miahm\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 535" --predefine="_RTE_ SETA 1" --
predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\print.lst P
rint.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 18 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 34 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000046

Symbol: LCD_OutFix
   Definitions
      At line 92 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
again 00000028

Symbol: again
   Definitions
      At line 61 in file Print.s
   Uses
      At line 68 in file Print.s
Comment: again used once
finish 00000106

Symbol: finish
   Definitions
      At line 231 in file Print.s
   Uses
      At line 196 in file Print.s
Comment: finish used once
loopback 00000010

Symbol: loopback
   Definitions
      At line 52 in file Print.s
   Uses
      At line 60 in file Print.s
Comment: loopback used once
outputsymbols 000000D6

Symbol: outputsymbols
   Definitions
      At line 204 in file Print.s
   Uses
      At line 114 in file Print.s
Comment: outputsymbols used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

variable1 00000004

Symbol: variable1
   Definitions
      At line 38 in file Print.s
   Uses
      At line 43 in file Print.s
      At line 49 in file Print.s

variable2 00000004

Symbol: variable2
   Definitions
      At line 95 in file Print.s
   Uses
      At line 102 in file Print.s
      At line 135 in file Print.s
      At line 137 in file Print.s
      At line 140 in file Print.s
      At line 157 in file Print.s
      At line 160 in file Print.s
      At line 172 in file Print.s
      At line 175 in file Print.s
      At line 181 in file Print.s
      At line 188 in file Print.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 64 in file Print.s
      At line 143 in file Print.s
      At line 147 in file Print.s
      At line 164 in file Print.s
      At line 179 in file Print.s
      At line 191 in file Print.s
      At line 210 in file Print.s
      At line 212 in file Print.s
      At line 214 in file Print.s
      At line 216 in file Print.s
      At line 218 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
345 symbols in table
